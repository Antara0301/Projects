{"ast":null,"code":"var _jsxFileName = \"/Users/antarabhunia/Desktop/react-udemy/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      person: [{\n        name: \"ant\",\n        age: 30\n      }, {\n        name: \"antara\",\n        age: 31\n      }, {\n        name: \"aniket\",\n        age: 15\n      }]\n    };\n\n    this.switchNameHandler = newName => {\n      this.setState({\n        person: [{\n          name: newName,\n          age: 30\n        }, {\n          name: \"antara\",\n          age: 31\n        }, {\n          name: \"aniket\",\n          age: 15\n        }]\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }\n    }, \"Hi,I am React app\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    }, \"This is really working\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.switchNameHandler.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }\n    }, \"Switch Name\"), /*#__PURE__*/React.createElement(Person, {\n      name: this.state.person[0].name,\n      age: this.state.person[0].age,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Person, {\n      name: this.state.person[1].name,\n      age: this.state.person[1].age,\n      click: this.switchNameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    }, \"MY hobbies: byking\"), /*#__PURE__*/React.createElement(Person, {\n      name: this.state.person[2].name,\n      age: this.state.person[2].age,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\nexport default App;\n/*\n\nclass App extends Component {\n  state ={\n\n    userInput: ''\n  }\n\n  iputChangeHandler=(event) => {\n    this.setState({userInput: event.target.value});\n\n  }\n deleteCharHandler =(index) =>{\n  const text = this.state.userInput.split('');\n\n  text.splice(index,1);\n  const updatedText= text.join('');\n  this.setState({userInput: updatedText});\n }\n\n\n render(){\n\n  let charList =this.state.userInput.split('').map((ch,index) =>{\n   return <Char character= {ch} key ={index}\n   clicked={() => this.deleteCharHandler(index)} />\n\n  });\n\n  return (\n    <div className='App'>\n      <br></br>\n      <br></br>\n      <input type=\"text\" onChange= {this.iputChangeHandler}\n      value={this.state.userInput}/>\n      <p>{this.state.userInput}</p>\n      <Validation inputLength= {this.state.userInput.length} />\n      {charList}\n    </div>\n  );\n }\n\n}\n\n\n\nclass App extends Component {\n\n  state={\n   username: 'supermax'\n\n  }\n  \n  usernameChangeHandler=(event) =>{\n   this.setState({\n     username: event.target.value\n   });\n\n  }\n\n render(){\n   return (\n    <div className=\"App\">\n     <br></br>\n     <UserInput changed={this.usernameChangeHandler}\n     currentName={this.state.username}/>\n     <UserOutput userName={this.state.username}/>\n     <UserOutput userName={this.state.username}/>\n     <UserOutput userName=\"max\" />\n     </div>\n    );\n  }\n}\n\n\n\n\n\n\n\nconst App = props => {\n const [personsState, setPersonState] = useState ({\n  persons: [\n    { name:\"Antara\", age:30},\n    { name:\"Subhadeep\",age:35},\n    { name:\"Aniket\", age:28}\n   ],\n   //otherState: 'some other value'\n });\n\n const [otherState,setOtherState] = useState('some other state value'); // ypu can add whatever you want noumber,bollen string\n console.log(personsState,otherState);\n const switchNameHandler = () => {\n  // console.log(\"eas clicked\");\n  setPersonState({\n   persons: [\n     { name:\"Ant\", age:30},\n     { name:\"Subhadeep\",age:35},\n     { name:\"Aniket\", age:27}\n    ]\n\n  });\n };\n\n return (\n    <div className=\"App\">\n     <h1>Hi, I am a React app</h1>\n     <p>This is a react</p>\n     <button onClick={switchNameHandler}>Switch Name</button>\n\n     <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n     <Person name ={personsState.persons[1].name} age={personsState.persons[1].age}> My hobbies: Racing</Person> \n     <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n    </div>\n  );\n }\n \n\n const StyledButton = styled.button`\n \n background-color:${props => props.alt ? 'red' : 'green'};\n  color: white;\n  font: inherit;\n  border: 1px solid blue;\n  padding: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background-color:${props => props.alt ? 'salmon' : 'lightgreen'};\n    color: black;\n  }\n `;\n\n\n\n\nclass App extends Component {\n \n  state={\n     persons: [\n      { id: \"abc\", name:\"Antara\", age:30},\n      { id: \"def\", name:\"Subhadeep\",age:35},\n      { id: \"ghi\", name:\"Aniket\", age:28}\n     ],\n     otherState: 'some other value',\n     showPerson: false\n\n  };\n  \n  nameChangeHandler = (event,id) => {\n\n   const personIndex = this.state.persons.findIndex(p =>{\n\n    return p.id === id;\n   });\n\n   const person ={\n\n    ...this.state.persons[personIndex]\n   };\n    \n   person.name= event.target.value;\n\n   const persons =[...this.state.persons];\n   persons[personIndex] = person;\n\n    this.setState({persons: persons})\n  }\n\n   deletePersonHandler =(personIndex) => {\n     //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n     persons.splice(personIndex,1);\n     this.setState({persons: persons});\n\n   }\n\n  togglePersonHandler =() => {\n   const doesShow= this.state.showPerson;\n    this.setState({showPerson: !doesShow});\n\n  }\n\n\nrender(){\n  /*\n const style={\n  backgroundColor:\"green\",\n  color: 'white',\n  font: \"inherit\",\n  border: \"1px solid blue\",\n  padding: \"8px\",\n  cursor: 'pointer',\n  ':hover':{\n    backgroundColor:'lightgreen',\n    color: 'black'\n  }\n  \n };\n \n let persons=null;\n\n if(this.state.showPerson === true ){\n\n  persons = (\n\n       <div>\n         {this.state.persons.map((person,index) => {\n           return <ErrorBoundary key={person.id}>\n             <Person \n           click={this.deletePersonHandler.bind(this,index)}\n           name={person.name}\n            age={person.age} \n            \n            change={(event) =>this.nameChangeHandler(event,person.id)} />\n            \n            </ErrorBoundary>\n\n         })}\n       \n    </div> \n  );\n  /*\n  style.backgroundColor= \"red\";\n  style[':hover']= {\n    backgroundColor:'salmon',\n    color: 'black'\n  };\n  \n }\n\n let assignedClasses =[];\n\n if(this.state.persons.length <= 2){\n  assignedClasses.push('red'); // classes =[red]\n }\n\nif(this.state.persons.length <= 1) {\n  assignedClasses.push('bold'); //classes= [red,bold]\n}\n\n\n  return (\n    //<StyleRoot>\n    <div className='App'>\n     <h1>Hi, I am a React app</h1>\n     <p className={assignedClasses.join(' ')}>This is a react</p>\n     < StyledButton //className={classes.Button}\n     \n     alt={this.state.showPerson}\n     //style={style}\n     onClick={ this.togglePersonHandler}>Switch Name\n     </StyledButton>\n\n     {persons}\n       \n        \n    </div>\n    //</StyleRoot>\n  );\n   } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Does it woked?'));\n  };\n      \n  export default App ;\n\n    //export default Radium(App);\n\n<Person name={this.state.persons[0].name} age={this.state.persons[0].age}/>\n       <Person name ={this.state.persons[1].name} age={this.state.persons[1].age} \n       click = {this.switchNameHandler. bind(this,'subho')}\n       change= {this.nameChangeHandler}> My hobbies: Racing</Person> \n       <Person name={this.state.persons[2].name} age={this.state.persons[2].age} \n\n       switchNameHandler = (newName) => {\n   // console.log(\"eas clicked\");\n   this.setState({\n    persons: [\n      { name: newName, age:30},\n      { name:\"Subhadeep\",age:35},\n      { name:\"Aniket\", age:27}\n     ]\n\n   })\n  }\n\n\nnameChangeHandler = (event,id) => {\n    this.setState({\n      persons: [\n        { name: \"ant\", age:30},\n        { name:event.target.value,age:35},\n        { name:\"Aniket\", age:27}\n       ]\n  \n     })\n       */","map":{"version":3,"sources":["/Users/antarabhunia/Desktop/react-udemy/src/App.js"],"names":["React","Component","Person","App","state","person","name","age","switchNameHandler","newName","setState","render","bind"],"mappings":";AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAGC,OAAQ,WAAR;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAED,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEzBG,KAFyB,GAEnB;AACJC,MAAAA,MAAM,EAAC,CACP;AAACC,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,GAAG,EAAE;AAAjB,OADO,EAEP;AAACD,QAAAA,IAAI,EAAC,QAAN;AAAeC,QAAAA,GAAG,EAAE;AAApB,OAFO,EAGP;AAACD,QAAAA,IAAI,EAAC,QAAN;AAAeC,QAAAA,GAAG,EAAE;AAApB,OAHO;AADH,KAFmB;;AAAA,SAYxBC,iBAZwB,GAYLC,OAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAC,CACP;AAACC,UAAAA,IAAI,EAACG,OAAN;AAAcF,UAAAA,GAAG,EAAE;AAAnB,SADO,EAEP;AAACD,UAAAA,IAAI,EAAC,QAAN;AAAeC,UAAAA,GAAG,EAAE;AAApB,SAFO,EAGP;AAACD,UAAAA,IAAI,EAAC,QAAN;AAAeC,UAAAA,GAAG,EAAE;AAApB,SAHO;AADG,OAAd;AAOC,KApBsB;AAAA;;AAwBzBI,EAAAA,MAAM,GAAE;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAKH,iBAAL,CAAuBI,IAAvB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAIE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,IAAnC;AACA,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBE,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAME,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,IAAnC;AACA,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBE,GAD1B;AAEA,MAAA,KAAK,EAAE,KAAKC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,eAUE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,IAAnC;AACA,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBE,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAgBD;;AAzCuB;;AA4C3B,eAAeJ,GAAf;AAmEA","sourcesContent":["\nimport React,{Component} from 'react';\n\nimport logo from './logo.svg';\n import  './App.css';\n import Person from \"./Person/Person\"\n\nclass App extends Component{\n\n  state={\n    person:[\n    {name:\"ant\",age: 30},\n    {name:\"antara\",age: 31},\n    {name:\"aniket\",age: 15}\n    ]\n \n  }\n  \n\n   switchNameHandler=(newName)=>{\n    this.setState({ \n        person:[\n        {name:newName,age: 30},\n        {name:\"antara\",age: 31},\n        {name:\"aniket\",age: 15}\n        ]\n      })\n    }\n\n\n\n  render(){\n     return(\n       <div className=\"App\">\n         <h1>Hi,I am React app</h1>\n         <p>This is really working</p>\n         <button onClick={this.switchNameHandler.bind()}>Switch Name</button>\n         <Person name={this.state.person[0].name} \n         age={this.state.person[0].age}/>\n         <Person name={this.state.person[1].name} \n         age={this.state.person[1].age}\n         click={this.switchNameHandler}>MY hobbies: byking\n         </Person>\n         <Person name={this.state.person[2].name} \n         age={this.state.person[2].age}/>\n\n       </div>\n     )\n   }\n  }\n\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n\nclass App extends Component {\n  state ={\n\n    userInput: ''\n  }\n\n  iputChangeHandler=(event) => {\n    this.setState({userInput: event.target.value});\n\n  }\n deleteCharHandler =(index) =>{\n  const text = this.state.userInput.split('');\n\n  text.splice(index,1);\n  const updatedText= text.join('');\n  this.setState({userInput: updatedText});\n }\n\n\n render(){\n\n  let charList =this.state.userInput.split('').map((ch,index) =>{\n   return <Char character= {ch} key ={index}\n   clicked={() => this.deleteCharHandler(index)} />\n\n  });\n\n  return (\n    <div className='App'>\n      <br></br>\n      <br></br>\n      <input type=\"text\" onChange= {this.iputChangeHandler}\n      value={this.state.userInput}/>\n      <p>{this.state.userInput}</p>\n      <Validation inputLength= {this.state.userInput.length} />\n      {charList}\n    </div>\n  );\n }\n\n}\n\n\n\nclass App extends Component {\n\n  state={\n   username: 'supermax'\n\n  }\n  \n  usernameChangeHandler=(event) =>{\n   this.setState({\n     username: event.target.value\n   });\n\n  }\n\n render(){\n   return (\n    <div className=\"App\">\n     <br></br>\n     <UserInput changed={this.usernameChangeHandler}\n     currentName={this.state.username}/>\n     <UserOutput userName={this.state.username}/>\n     <UserOutput userName={this.state.username}/>\n     <UserOutput userName=\"max\" />\n     </div>\n    );\n  }\n}\n\n\n\n\n\n\n\nconst App = props => {\n const [personsState, setPersonState] = useState ({\n  persons: [\n    { name:\"Antara\", age:30},\n    { name:\"Subhadeep\",age:35},\n    { name:\"Aniket\", age:28}\n   ],\n   //otherState: 'some other value'\n });\n\n const [otherState,setOtherState] = useState('some other state value'); // ypu can add whatever you want noumber,bollen string\n console.log(personsState,otherState);\n const switchNameHandler = () => {\n  // console.log(\"eas clicked\");\n  setPersonState({\n   persons: [\n     { name:\"Ant\", age:30},\n     { name:\"Subhadeep\",age:35},\n     { name:\"Aniket\", age:27}\n    ]\n\n  });\n };\n\n return (\n    <div className=\"App\">\n     <h1>Hi, I am a React app</h1>\n     <p>This is a react</p>\n     <button onClick={switchNameHandler}>Switch Name</button>\n\n     <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n     <Person name ={personsState.persons[1].name} age={personsState.persons[1].age}> My hobbies: Racing</Person> \n     <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n    </div>\n  );\n }\n \n\n const StyledButton = styled.button`\n \n background-color:${props => props.alt ? 'red' : 'green'};\n  color: white;\n  font: inherit;\n  border: 1px solid blue;\n  padding: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background-color:${props => props.alt ? 'salmon' : 'lightgreen'};\n    color: black;\n  }\n `;\n\n\n\n\nclass App extends Component {\n \n  state={\n     persons: [\n      { id: \"abc\", name:\"Antara\", age:30},\n      { id: \"def\", name:\"Subhadeep\",age:35},\n      { id: \"ghi\", name:\"Aniket\", age:28}\n     ],\n     otherState: 'some other value',\n     showPerson: false\n\n  };\n  \n  nameChangeHandler = (event,id) => {\n\n   const personIndex = this.state.persons.findIndex(p =>{\n\n    return p.id === id;\n   });\n\n   const person ={\n\n    ...this.state.persons[personIndex]\n   };\n    \n   person.name= event.target.value;\n\n   const persons =[...this.state.persons];\n   persons[personIndex] = person;\n\n    this.setState({persons: persons})\n  }\n\n   deletePersonHandler =(personIndex) => {\n     //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n     persons.splice(personIndex,1);\n     this.setState({persons: persons});\n\n   }\n\n  togglePersonHandler =() => {\n   const doesShow= this.state.showPerson;\n    this.setState({showPerson: !doesShow});\n\n  }\n\n\nrender(){\n  /*\n const style={\n  backgroundColor:\"green\",\n  color: 'white',\n  font: \"inherit\",\n  border: \"1px solid blue\",\n  padding: \"8px\",\n  cursor: 'pointer',\n  ':hover':{\n    backgroundColor:'lightgreen',\n    color: 'black'\n  }\n  \n };\n \n let persons=null;\n\n if(this.state.showPerson === true ){\n\n  persons = (\n\n       <div>\n         {this.state.persons.map((person,index) => {\n           return <ErrorBoundary key={person.id}>\n             <Person \n           click={this.deletePersonHandler.bind(this,index)}\n           name={person.name}\n            age={person.age} \n            \n            change={(event) =>this.nameChangeHandler(event,person.id)} />\n            \n            </ErrorBoundary>\n\n         })}\n       \n    </div> \n  );\n  /*\n  style.backgroundColor= \"red\";\n  style[':hover']= {\n    backgroundColor:'salmon',\n    color: 'black'\n  };\n  \n }\n\n let assignedClasses =[];\n\n if(this.state.persons.length <= 2){\n  assignedClasses.push('red'); // classes =[red]\n }\n\nif(this.state.persons.length <= 1) {\n  assignedClasses.push('bold'); //classes= [red,bold]\n}\n\n\n  return (\n    //<StyleRoot>\n    <div className='App'>\n     <h1>Hi, I am a React app</h1>\n     <p className={assignedClasses.join(' ')}>This is a react</p>\n     < StyledButton //className={classes.Button}\n     \n     alt={this.state.showPerson}\n     //style={style}\n     onClick={ this.togglePersonHandler}>Switch Name\n     </StyledButton>\n\n     {persons}\n       \n        \n    </div>\n    //</StyleRoot>\n  );\n   } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Does it woked?'));\n  };\n      \n  export default App ;\n\n    //export default Radium(App);\n\n<Person name={this.state.persons[0].name} age={this.state.persons[0].age}/>\n       <Person name ={this.state.persons[1].name} age={this.state.persons[1].age} \n       click = {this.switchNameHandler. bind(this,'subho')}\n       change= {this.nameChangeHandler}> My hobbies: Racing</Person> \n       <Person name={this.state.persons[2].name} age={this.state.persons[2].age} \n\n       switchNameHandler = (newName) => {\n   // console.log(\"eas clicked\");\n   this.setState({\n    persons: [\n      { name: newName, age:30},\n      { name:\"Subhadeep\",age:35},\n      { name:\"Aniket\", age:27}\n     ]\n\n   })\n  }\n\n\nnameChangeHandler = (event,id) => {\n    this.setState({\n      persons: [\n        { name: \"ant\", age:30},\n        { name:event.target.value,age:35},\n        { name:\"Aniket\", age:27}\n       ]\n  \n     })\n       */"]},"metadata":{},"sourceType":"module"}