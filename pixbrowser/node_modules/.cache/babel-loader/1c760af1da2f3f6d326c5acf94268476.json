{"ast":null,"code":"var _jsxFileName = \"/Users/antarabhunia/Desktop/react-udemy/src/App.js\";\nimport React, { Component } from 'react'; //import React, {useState} from 'react';\n//import logo from './logo.svg';\n\nimport './App.css';\nimport Person from './Person/Person'; // P should be uppercase always \n//import { render } from '@testing-library/react';\n\nimport Validation from './Validation/Validation';\nimport Char from './Char/Char'; //import UserInput from './UserInput/UserInput';\n//import UserOutput from './UserOutput/UserOutput';\n// Assigment 2\n\n/*\nclass App extends Component {\n  state ={\n\n    userInput: ''\n  }\n\n  iputChangeHandler=(event) => {\n    this.setState({userInput: event.target.value});\n\n  }\n deleteCharHandler =(index) =>{\n  const text = this.state.userInput.split('');\n\n  text.splice(index,1);\n  const updatedText= text.join('');\n  this.setState({userInput: updatedText});\n }\n\n\n render(){\n\n  let charList =this.state.userInput.split('').map((ch,index) =>{\n   return <Char character= {ch} key ={index}\n   clicked={() => this.deleteCharHandler(index)} />\n\n  });\n\n  return (\n    <div className='App'>\n      <br></br>\n      <br></br>\n      <input type=\"text\" onChange= {this.iputChangeHandler}\n      value={this.state.userInput}/>\n      <p>{this.state.userInput}</p>\n      <Validation inputLength= {this.state.userInput.length} />\n      {charList}\n    </div>\n  );\n }\n\n}\n*/\n//import { render } from '@testing-library/react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: 'supermax'\n    };\n\n    this.usernameChangeHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(UserInput, {\n      changed: this.usernameChangeHandler,\n      currentName: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(UserOutput, {\n      userName: \"max\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }\n    }));\n  }\n\n}\n/*\n\nconst App = props => {\n const [personsState, setPersonState] = useState ({\n  persons: [\n    { name:\"Antara\", age:30},\n    { name:\"Subhadeep\",age:35},\n    { name:\"Aniket\", age:28}\n   ],\n   //otherState: 'some other value'\n });\n\n const [otherState,setOtherState] = useState('some other state value'); // ypu can add whatever you want noumber,bollen string\n console.log(personsState,otherState);\n const switchNameHandler = () => {\n  // console.log(\"eas clicked\");\n  setPersonState({\n   persons: [\n     { name:\"Ant\", age:30},\n     { name:\"Subhadeep\",age:35},\n     { name:\"Aniket\", age:27}\n    ]\n\n  });\n };\n\n return (\n    <div className=\"App\">\n     <h1>Hi, I am a React app</h1>\n     <p>This is a react</p>\n     <button onClick={switchNameHandler}>Switch Name</button>\n\n     <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n     <Person name ={personsState.persons[1].name} age={personsState.persons[1].age}> My hobbies: Racing</Person> \n     <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n    </div>\n  );\n }\n */\n\n/*\nclass App extends Component {\n\n state={\n    persons: [\n     { id: \"abc\", name:\"Antara\", age:30},\n     { id: \"def\", name:\"Subhadeep\",age:35},\n     { id: \"ghi\", name:\"Aniket\", age:28}\n    ],\n    otherState: 'some other value',\n    showPerson: false\n  }\n \n nameChangeHandler = (event,id) => {\n   const personIndex = this.state.persons.findIndex(p =>{\n    return p.id === id;\n  });\n   const person ={\n    ...this.state.persons[personIndex]\n  };\n   \n  person.name= event.target.value;\n   const persons =[...this.state.persons];\n  persons[personIndex] = person;\n    this.setState({persons: persons})\n }\n   deletePersonHandler =(personIndex) => {\n    //const persons = this.state.persons.slice();\n   const persons = [...this.state.persons];\n    persons.splice(personIndex,1);\n    this.setState({persons: persons});\n   }\n  togglePersonHandler =() => {\n  const doesShow= this.state.showPerson;\n   this.setState({showPerson: !doesShow});\n  }\n\n\nrender(){\nconst style={\n backgroundColor:\"white\",\n font: \"inherit\",\n border: \"1px solid blue\",\n padding: \"8px\",\n cursor: 'pointer'\n };\n let persons=null;\n if(this.state.showPerson === true ){\n  persons = (\n       <div>\n        {this.state.persons.map((person,index) => {\n          return <Person \n          click={this.deletePersonHandler.bind(this,index)}\n          name={person.name}\n           age={person.age} \n           key={person.id}\n           change={(event) =>this.nameChangeHandler(event,person.id)} />\n        })}\n      \n   </div> \n );\n}\n  return (\n   <div className=\"App\">\n    <h1>Hi, I am a React app</h1>\n    <p>This is a react</p>\n    <button \n    style={style}\n    onClick={ this.togglePersonHandler}>Switch Name</button>\n     {persons}\n      \n       \n   </div>\n );\n  } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Does it woked?'));\n };\n*/\n\n\nexport default App;\n/*\n<Person name={this.state.persons[0].name} age={this.state.persons[0].age}/>\n       <Person name ={this.state.persons[1].name} age={this.state.persons[1].age} \n       click = {this.switchNameHandler. bind(this,'subho')}\n       change= {this.nameChangeHandler}> My hobbies: Racing</Person> \n       <Person name={this.state.persons[2].name} age={this.state.persons[2].age} \n\n       switchNameHandler = (newName) => {\n   // console.log(\"eas clicked\");\n   this.setState({\n    persons: [\n      { name: newName, age:30},\n      { name:\"Subhadeep\",age:35},\n      { name:\"Aniket\", age:27}\n     ]\n\n   })\n  }\n\n\nnameChangeHandler = (event,id) => {\n    this.setState({\n      persons: [\n        { name: \"ant\", age:30},\n        { name:event.target.value,age:35},\n        { name:\"Aniket\", age:27}\n       ]\n  \n     })\n       */","map":{"version":3,"sources":["/Users/antarabhunia/Desktop/react-udemy/src/App.js"],"names":["React","Component","Person","Validation","Char","App","state","username","usernameChangeHandler","event","setState","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAAuC;AACvC;;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CACA;AACA;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BK,KAF0B,GAEpB;AACLC,MAAAA,QAAQ,EAAE;AADL,KAFoB;;AAAA,SAO1BC,qBAP0B,GAOHC,KAAD,IAAU;AAC/B,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAIA,KAZyB;AAAA;;AAc3BC,EAAAA,MAAM,GAAE;AACN,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAKL,qBAAzB;AACA,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,QADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAIC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,eAKC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,eAMC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,CADD;AAUA;;AAzByB;AA+B5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGD,eAAeF,GAAf;AACA","sourcesContent":["import React, {Component} from 'react';\n//import React, {useState} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Person from './Person/Person';  // P should be uppercase always \n//import { render } from '@testing-library/react';\nimport Validation from './Validation/Validation';\nimport Char from './Char/Char';\n//import UserInput from './UserInput/UserInput';\n//import UserOutput from './UserOutput/UserOutput';\n\n// Assigment 2\n/*\nclass App extends Component {\n  state ={\n\n    userInput: ''\n  }\n\n  iputChangeHandler=(event) => {\n    this.setState({userInput: event.target.value});\n\n  }\n deleteCharHandler =(index) =>{\n  const text = this.state.userInput.split('');\n\n  text.splice(index,1);\n  const updatedText= text.join('');\n  this.setState({userInput: updatedText});\n }\n\n\n render(){\n\n  let charList =this.state.userInput.split('').map((ch,index) =>{\n   return <Char character= {ch} key ={index}\n   clicked={() => this.deleteCharHandler(index)} />\n\n  });\n\n  return (\n    <div className='App'>\n      <br></br>\n      <br></br>\n      <input type=\"text\" onChange= {this.iputChangeHandler}\n      value={this.state.userInput}/>\n      <p>{this.state.userInput}</p>\n      <Validation inputLength= {this.state.userInput.length} />\n      {charList}\n    </div>\n  );\n }\n\n}\n*/\n\n\n\n\n//import { render } from '@testing-library/react';\n\nclass App extends Component {\n\n  state={\n   username: 'supermax'\n\n  }\n  \n  usernameChangeHandler=(event) =>{\n   this.setState({\n     username: event.target.value\n   });\n\n  }\n\n render(){\n   return (\n    <div className=\"App\">\n     <br></br>\n     <UserInput changed={this.usernameChangeHandler}\n     currentName={this.state.username}/>\n     <UserOutput userName={this.state.username}/>\n     <UserOutput userName={this.state.username}/>\n     <UserOutput userName=\"max\" />\n     </div>\n    );\n  }\n}\n\n\n\n\n/*\n\nconst App = props => {\n const [personsState, setPersonState] = useState ({\n  persons: [\n    { name:\"Antara\", age:30},\n    { name:\"Subhadeep\",age:35},\n    { name:\"Aniket\", age:28}\n   ],\n   //otherState: 'some other value'\n });\n\n const [otherState,setOtherState] = useState('some other state value'); // ypu can add whatever you want noumber,bollen string\n console.log(personsState,otherState);\n const switchNameHandler = () => {\n  // console.log(\"eas clicked\");\n  setPersonState({\n   persons: [\n     { name:\"Ant\", age:30},\n     { name:\"Subhadeep\",age:35},\n     { name:\"Aniket\", age:27}\n    ]\n\n  });\n };\n\n return (\n    <div className=\"App\">\n     <h1>Hi, I am a React app</h1>\n     <p>This is a react</p>\n     <button onClick={switchNameHandler}>Switch Name</button>\n\n     <Person name={personsState.persons[0].name} age={personsState.persons[0].age}/>\n     <Person name ={personsState.persons[1].name} age={personsState.persons[1].age}> My hobbies: Racing</Person> \n     <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n    </div>\n  );\n }\n */\n\n /*\nclass App extends Component {\n \n  state={\n     persons: [\n      { id: \"abc\", name:\"Antara\", age:30},\n      { id: \"def\", name:\"Subhadeep\",age:35},\n      { id: \"ghi\", name:\"Aniket\", age:28}\n     ],\n     otherState: 'some other value',\n     showPerson: false\n\n  }\n  \n  nameChangeHandler = (event,id) => {\n\n   const personIndex = this.state.persons.findIndex(p =>{\n\n    return p.id === id;\n   });\n\n   const person ={\n\n    ...this.state.persons[personIndex]\n   };\n    \n   person.name= event.target.value;\n\n   const persons =[...this.state.persons];\n   persons[personIndex] = person;\n\n    this.setState({persons: persons})\n  }\n\n   deletePersonHandler =(personIndex) => {\n     //const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n     persons.splice(personIndex,1);\n     this.setState({persons: persons});\n\n   }\n\n  togglePersonHandler =() => {\n   const doesShow= this.state.showPerson;\n    this.setState({showPerson: !doesShow});\n\n  }\n\n\n\n\n\nrender(){\n const style={\n  backgroundColor:\"white\",\n  font: \"inherit\",\n  border: \"1px solid blue\",\n  padding: \"8px\",\n  cursor: 'pointer'\n\n };\n\n let persons=null;\n\n if(this.state.showPerson === true ){\n\n  persons = (\n\n       <div>\n         {this.state.persons.map((person,index) => {\n           return <Person \n           click={this.deletePersonHandler.bind(this,index)}\n           name={person.name}\n            age={person.age} \n            key={person.id}\n            change={(event) =>this.nameChangeHandler(event,person.id)} />\n         })}\n       \n    </div> \n  );\n }\n\n  return (\n    <div className=\"App\">\n     <h1>Hi, I am a React app</h1>\n     <p>This is a react</p>\n     <button \n     style={style}\n     onClick={ this.togglePersonHandler}>Switch Name</button>\n\n     {persons}\n       \n        \n    </div>\n  );\n   } //return React.createElement('div',{className: 'App'},React.createElement('h1',null,'Does it woked?'));\n  };\n\n*/\nexport default App;\n/*\n<Person name={this.state.persons[0].name} age={this.state.persons[0].age}/>\n       <Person name ={this.state.persons[1].name} age={this.state.persons[1].age} \n       click = {this.switchNameHandler. bind(this,'subho')}\n       change= {this.nameChangeHandler}> My hobbies: Racing</Person> \n       <Person name={this.state.persons[2].name} age={this.state.persons[2].age} \n\n       switchNameHandler = (newName) => {\n   // console.log(\"eas clicked\");\n   this.setState({\n    persons: [\n      { name: newName, age:30},\n      { name:\"Subhadeep\",age:35},\n      { name:\"Aniket\", age:27}\n     ]\n\n   })\n  }\n\n\nnameChangeHandler = (event,id) => {\n    this.setState({\n      persons: [\n        { name: \"ant\", age:30},\n        { name:event.target.value,age:35},\n        { name:\"Aniket\", age:27}\n       ]\n  \n     })\n       */"]},"metadata":{},"sourceType":"module"}