{"ast":null,"code":"import React, { useState, useEffect, useRef } from \"react\";\nexport function useHover() {\n  const [hovered, useHovered] = useState(false);\n  const ref = useRef(null);\n\n  const enter = () => {\n    useHovered(true);\n  };\n\n  constleave = () => {\n    useHovered(false);\n  };\n\n  useEffect(() => {\n    ref.current.addEventListener(\"mouseenter\", enter);\n    ref.current.addEventListener(\"mouseleave\", leave);\n    return () => {\n      ref.current.removeEventListener(\"mouseenter\", enter);\n      ref.current.removeEventListener(\"mouseleave\", leave);\n    };\n  }, []);\n  return [hovered, ref];\n}","map":{"version":3,"sources":["/Users/antarabhunia/Documents/React Scrimba/Scrimba-Capstone-project/src/hooks/useHover.js"],"names":["React","useState","useEffect","useRef","useHover","hovered","useHovered","ref","enter","constleave","current","addEventListener","leave","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,MAAjC,QAA8C,OAA9C;AAEA,OAAO,SAASC,QAAT,GAAmB;AACtB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAqBL,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAMM,GAAG,GAACJ,MAAM,CAAC,IAAD,CAAhB;;AAEJ,QAAMK,KAAK,GAAC,MAAI;AACZF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAFD;;AAIAG,EAAAA,UAAU,GAAC,MAAI;AACXH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAFD;;AAGAJ,EAAAA,SAAS,CAAC,MAAI;AACdK,IAAAA,GAAG,CAACG,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CH,KAA3C;AACAD,IAAAA,GAAG,CAACG,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CC,KAA3C;AAEA,WAAO,MAAI;AACPL,MAAAA,GAAG,CAACG,OAAJ,CAAYG,mBAAZ,CAAgC,YAAhC,EAA8CL,KAA9C;AACAD,MAAAA,GAAG,CAACG,OAAJ,CAAYG,mBAAZ,CAAgC,YAAhC,EAA8CD,KAA9C;AACH,KAHD;AAIC,GARQ,EAQP,EARO,CAAT;AAUI,SACI,CAACP,OAAD,EAASE,GAAT,CADJ;AAIH","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\"\n\nexport function useHover(){\n    const [hovered,useHovered]=useState(false)\n    const ref=useRef(null)\n\nconst enter=()=>{\n    useHovered(true)\n}\n\nconstleave=()=>{\n    useHovered(false)\n}\nuseEffect(()=>{\nref.current.addEventListener(\"mouseenter\", enter)\nref.current.addEventListener(\"mouseleave\", leave)\n\nreturn ()=>{\n    ref.current.removeEventListener(\"mouseenter\", enter)\n    ref.current.removeEventListener(\"mouseleave\", leave) \n}\n},[])\n\n    return(\n        [hovered,ref]\n\n    )\n}"]},"metadata":{},"sourceType":"module"}