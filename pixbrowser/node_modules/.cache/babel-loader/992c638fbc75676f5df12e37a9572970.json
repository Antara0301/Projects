{"ast":null,"code":"var _jsxFileName = \"/Users/antarabhunia/Documents/React Scrimba/Scrimba-Capstone-project/src/pages/Cart.js\";\nimport React, { useContext, useState } from \"react\"; //import { CartItem } from \"../Component/CartItems\"\n\nimport { Context } from \"../Context\";\nimport { CartItems } from \"../Component/CartItems\";\nexport function Cart() {\n  const [buttonText, setButtonText] = useState(\"Place Order\");\n  const {\n    cartItems,\n    emptyCart\n  } = useContext(Context);\n  const totalCost = 5.99 * cartItems.length;\n  const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n  const cartItemElements = cartItems.map(item => /*#__PURE__*/React.createElement(CartItems, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }));\n\n  const placeOrder = () => {\n    setButtonText(\"Ordering...\");\n    setTimeout(() => {\n      console.log(\"Order Placed\");\n      setButtonText(\"Place Order\");\n      emptyCart;\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"cart-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Check out\"), cartItemElements, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"total-cost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"total:\", totalCostDisplay), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: placeOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, buttonText)));\n}","map":{"version":3,"sources":["/Users/antarabhunia/Documents/React Scrimba/Scrimba-Capstone-project/src/pages/Cart.js"],"names":["React","useContext","useState","Context","CartItems","Cart","buttonText","setButtonText","cartItems","emptyCart","totalCost","length","totalCostDisplay","toLocaleString","style","currency","cartItemElements","map","item","id","placeOrder","setTimeout","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC,C,CACA;;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AAEA,OAAO,SAASC,IAAT,GAAe;AAClB,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BL,QAAQ,CAAC,aAAD,CAAzC;AACA,QAAM;AAACM,IAAAA,SAAD;AAAWC,IAAAA;AAAX,MAAsBR,UAAU,CAACE,OAAD,CAAtC;AAEJ,QAAMO,SAAS,GAAC,OAAKF,SAAS,CAACG,MAA/B;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,cAAV,CAAyB,OAAzB,EAAkC;AAACC,IAAAA,KAAK,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAAlC,CAAzB;AAEI,QAAMC,gBAAgB,GAACR,SAAS,CAACS,GAAV,CAAcC,IAAI,iBACrC,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADmB,CAAvB;;AAIA,QAAME,UAAU,GAAC,MAAI;AACjBb,IAAAA,aAAa,CAAC,aAAD,CAAb;AACAc,IAAAA,UAAU,CAAC,MAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAhB,MAAAA,aAAa,CAAC,aAAD,CAAb;AACAE,MAAAA,SAAS;AACA,KAJS,EAIR,IAJQ,CAAV;AAKH,GAPD;;AAQA,sBAEI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGKO,gBAHL,eAIJ;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCJ,gBAAjC,CAJI,eAKI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAQ,IAAA,OAAO,EAAEQ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8Bd,UAA9B,CADQ,CALJ,CAFJ;AAYH","sourcesContent":["import React,{useContext,useState} from \"react\"\n//import { CartItem } from \"../Component/CartItems\"\nimport {Context} from \"../Context\"\nimport {CartItems} from \"../Component/CartItems\"\n\nexport function Cart(){\n    const [buttonText,setButtonText]=useState(\"Place Order\")\n    const {cartItems,emptyCart}=useContext(Context)\n\nconst totalCost=5.99*cartItems.length\nconst totalCostDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\n\n    const cartItemElements=cartItems.map(item => (\n        <CartItems key={item.id} item={item}/>\n    ))\n\n    const placeOrder=()=>{\n        setButtonText(\"Ordering...\")\n        setTimeout(()=>{\nconsole.log(\"Order Placed\")\nsetButtonText(\"Place Order\")\nemptyCart\n        },3000)\n    }\n    return(\n        \n        <main className=\"cart-page\">\n           \n            <h1>Check out</h1>\n            {cartItemElements}\n    <p className=\"total-cost\">total:{totalCostDisplay}</p>\n            <div className=\"order-button\">\n    <button onClick={placeOrder}>{buttonText}</button>\n            </div>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}